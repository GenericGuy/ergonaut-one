#ifndef KEYMAP_DRAWER
  #include "keys_de.h"
#endif

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB     &kp DE_Q  &kp DE_W  &kp DE_E        &kp DE_R                    &kp DE_T   &kp DE_Z   &kp DE_U                 &kp DE_I      &kp DE_O    &kp DE_P      &kp DE_ACUTE
&mo 3       &kp DE_A  &kp DE_S  &kp DE_D        &kp DE_F                    &kp DE_G   &kp DE_H   &kp DE_J                 &kp DE_K      &kp DE_L    &sl 5         &mo 3
&kp LSHIFT  &kp DE_Y  &kp DE_X  &kp DE_C        &kp DE_V                    &kp DE_B   &kp DE_N   &kp DE_M                 &kp DE_COMMA  &kp DE_DOT  &kp DE_MINUS  &kp RSHIFT
                                &lt 2 LEFT_WIN  &mt LEFT_CONTROL BACKSPACE  &lt 1 RET  &lt 1 ESC  &mt RIGHT_CONTROL SPACE  &lt 2 DEL
            >;
        };

        lower_layer {
            bindings = <
&mt LGUI F1     &kp F2     &kp F3         &kp F4         &kp F5          &kp F6     &kp F7     &kp F8     &kp F9          &kp F10    &kp F11    &kp F12
&mt LCTRL PLUS  &none      &kp DE_SUPER2  &kp DE_SUPER3  &kp DE_SECTION  &none      &none      &kp DE_MU  &kp DE_SHARP_S  &none      &none      &mt RCTRL MINUS
&mt LALT EQUAL  &kp DE_N1  &kp DE_N2      &kp DE_N3      &kp DE_N4       &kp DE_N5  &kp DE_N6  &kp DE_N7  &kp DE_N8       &kp DE_N9  &kp DE_N0  &kp RALT
                                          &trans         &trans          &trans     &trans     &trans     &trans
            >;
        };

        raise_layer {
            bindings = <
&mt LGUI KP_NUM  &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS  &kp C_VOL_UP  &kp HOME  &kp PSCRN  &kp PG_UP  &kp SLCK         &kp CLCK
&mt LCTRL EQUAL  &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS   &kp C_MUTE    &kp LEFT  &kp UP     &kp RIGHT  &kp INS          &mt RCTRL K_APP
&kp LALT         &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT    &kp C_VOL_DN  &kp END   &kp DOWN   &kp PG_DN  &kp PAUSE_BREAK  &kp RALT
                                             &trans     &trans     &trans        &trans        &trans    &trans
            >;
        };

        neoqwertz {
            bindings = <
&trans  &kp DE_DEGREE     &kp DE_UNDERSCORE  &kp DE_LEFT_BRACKET  &kp DE_RIGHT_BRACKET  &kp DE_CARET     &kp DE_EXCLAMATION  &kp DE_LESS_THAN         &kp DE_GREATER_THAN       &kp DE_EQUAL         &kp DE_AMPERSAND  &kp DE_EURO
&trans  &kp DE_BACKSLASH  &kp DE_SLASH       &kp DE_LEFT_BRACE    &kp DE_RIGHT_BRACE    &kp DE_ASTERISK  &kp DE_QUESTION     &kp DE_LEFT_PARENTHESIS  &kp DE_RIGHT_PARENTHESIS  &kp DE_MINUS         &kp DE_COLON      &kp DE_AT_SIGN
&trans  &kp DE_HASH       &kp DE_DOLLAR      &kp DE_PIPE          &kp DE_TILDE          &kp DE_GRAVE     &kp DE_PLUS         &kp DE_PERCENT           &kp DE_DOUBLE_QUOTES      &kp DE_SINGLE_QUOTE  &kp DE_SEMICOLON  &kp DE_DOLLAR
                                             &trans               &trans                &trans           &trans              &trans                   &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&sys_reset   &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &sys_reset
                                         &trans        &to 6         &trans        &none         &trans        &trans
            >;
        };

        umlauts {
            bindings = <
&trans  &trans           &trans  &trans  &trans  &trans  &trans  &kp DE_U_UMLAUT  &trans  &kp DE_O_UMLAUT  &trans  &trans
&trans  &kp DE_A_UMLAUT  &trans  &trans  &trans  &trans  &trans  &trans           &trans  &trans           &trans  &trans
&trans  &trans           &trans  &trans  &trans  &trans  &trans  &trans           &trans  &trans           &trans  &trans
                                 &trans  &trans  &trans  &trans  &trans           &trans
            >;
        };

        gaming {
            bindings = <
&trans   &kp DE_N1  &kp DE_N2  &kp DE_N3   &kp DE_N4     &kp DE_N5  &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB  &kp DE_Q   &kp DE_W   &kp DE_E    &kp DE_R      &kp DE_T   &to 0   &trans  &trans  &trans  &trans  &trans
&trans   &kp DE_A   &kp DE_S   &kp DE_D    &kp DE_F      &kp DE_G   &trans  &trans  &trans  &trans  &trans  &trans
                               &kp ESCAPE  &kp LEFT_ALT  &kp SPACE  &trans  &trans  &trans
            >;
        };
    };
};
